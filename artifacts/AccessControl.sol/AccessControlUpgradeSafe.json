{"abi":[{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getRoleMember","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getRoleMemberCount","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. * Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: * ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` * Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: * ``` function foo() public {    require(hasRole(MY_ROLE, _msgSender()));    ... } ``` * Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}.\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol\":\"AccessControlUpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"node_modules/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x3954a5ee18b9297616912390eac7b0fe698e6ffea5a50dc3ccb0980cae210e86\",\"urls\":[\"bzz-raw://944779923ae00addaad98671de2303268765d53f1b0d66076280585edd084862\",\"dweb:/ipfs/QmRtRFCkvsWD3c6WBpAh3wgMZKXBaFfRAvB76TsVFiUdEw\"]},\"node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.2+commit.bacdbe57"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleGranted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleRevoked","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"renounceRole"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"}],"devdoc":{"methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."}}},"userdoc":{"methods":{}}},"settings":{"remappings":["@ensdomains/=node_modules/@ensdomains/","@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","truffle/=node_modules/truffle/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol":"AccessControlUpgradeSafe"},"evmVersion":"istanbul","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol":{"keccak256":"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e","urls":["bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea","dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx"],"license":null},"node_modules/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol":{"keccak256":"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721","urls":["bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f","dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7"],"license":null},"node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol":{"keccak256":"0x3954a5ee18b9297616912390eac7b0fe698e6ffea5a50dc3ccb0980cae210e86","urls":["bzz-raw://944779923ae00addaad98671de2303268765d53f1b0d66076280585edd084862","dweb:/ipfs/QmRtRFCkvsWD3c6WBpAh3wgMZKXBaFfRAvB76TsVFiUdEw"],"license":null},"node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol":{"keccak256":"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b","urls":["bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a","dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn"],"license":null},"node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableSet.sol":{"keccak256":"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1","urls":["bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427","dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in"],"license":null}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol","id":30286,"exportedSymbols":{"AccessControlUpgradeSafe":[30285]},"nodeType":"SourceUnit","src":"0:6956:30","nodes":[{"id":30009,"nodeType":"PragmaDirective","src":"0:23:30","nodes":[],"literals":["solidity","^","0.6",".0"]},{"id":30010,"nodeType":"ImportDirective","src":"25:36:30","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableSet.sol","file":"../utils/EnumerableSet.sol","scope":30286,"sourceUnit":31134,"symbolAliases":[],"unitAlias":""},{"id":30011,"nodeType":"ImportDirective","src":"62:30:30","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol","file":"../utils/Address.sol","scope":30286,"sourceUnit":30672,"symbolAliases":[],"unitAlias":""},{"id":30012,"nodeType":"ImportDirective","src":"93:28:30","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol","file":"../GSN/Context.sol","scope":30286,"sourceUnit":29938,"symbolAliases":[],"unitAlias":""},{"id":30013,"nodeType":"ImportDirective","src":"122:30:30","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol","file":"../Initializable.sol","scope":30286,"sourceUnit":30008,"symbolAliases":[],"unitAlias":""},{"id":30285,"nodeType":"ContractDefinition","src":"1235:5720:30","nodes":[{"id":30029,"nodeType":"FunctionDefinition","src":"1321:138:30","nodes":[],"body":{"id":30028,"nodeType":"Block","src":"1374:85:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30022,"name":"__Context_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29912,"src":"1384:24:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":30023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30024,"nodeType":"ExpressionStatement","src":"1384:26:30"},{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30025,"name":"__AccessControl_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30035,"src":"1420:30:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":30026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1420:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30027,"nodeType":"ExpressionStatement","src":"1420:32:30"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":30020,"modifierName":{"argumentTypes":null,"id":30019,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29981,"src":"1362:11:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1362:11:30"}],"name":"__AccessControl_init","overrides":null,"parameters":{"id":30018,"nodeType":"ParameterList","parameters":[],"src":"1350:2:30"},"returnParameters":{"id":30021,"nodeType":"ParameterList","parameters":[],"src":"1374:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":30035,"nodeType":"FunctionDefinition","src":"1465:72:30","nodes":[],"body":{"id":30034,"nodeType":"Block","src":"1528:9:30","nodes":[],"statements":[]},"documentation":null,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":30032,"modifierName":{"argumentTypes":null,"id":30031,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29981,"src":"1516:11:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1516:11:30"}],"name":"__AccessControl_init_unchained","overrides":null,"parameters":{"id":30030,"nodeType":"ParameterList","parameters":[],"src":"1504:2:30"},"returnParameters":{"id":30033,"nodeType":"ParameterList","parameters":[],"src":"1528:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":30038,"nodeType":"UsingForDirective","src":"1543:49:30","nodes":[],"libraryName":{"contractScope":null,"id":30036,"name":"EnumerableSet","nodeType":"UserDefinedTypeName","referencedDeclaration":31133,"src":"1549:13:30","typeDescriptions":{"typeIdentifier":"t_contract$_EnumerableSet_$31133","typeString":"library EnumerableSet"}},"typeName":{"contractScope":null,"id":30037,"name":"EnumerableSet.AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":30939,"src":"1567:24:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"id":30041,"nodeType":"UsingForDirective","src":"1597:26:30","nodes":[],"libraryName":{"contractScope":null,"id":30039,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":30671,"src":"1603:7:30","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$30671","typeString":"library Address"}},"typeName":{"id":30040,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":30046,"nodeType":"StructDefinition","src":"1629:92:30","nodes":[],"canonicalName":"AccessControlUpgradeSafe.RoleData","members":[{"constant":false,"id":30043,"name":"members","nodeType":"VariableDeclaration","overrides":null,"scope":30046,"src":"1655:32:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"contractScope":null,"id":30042,"name":"EnumerableSet.AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":30939,"src":"1655:24:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"value":null,"visibility":"internal"},{"constant":false,"id":30045,"name":"adminRole","nodeType":"VariableDeclaration","overrides":null,"scope":30046,"src":"1697:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1697:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"name":"RoleData","scope":30285,"visibility":"public"},{"id":30050,"nodeType":"VariableDeclaration","src":"1727:44:30","nodes":[],"constant":false,"name":"_roles","overrides":null,"scope":30285,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"},"typeName":{"id":30049,"keyType":{"id":30047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1736:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1727:29:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"},"valueType":{"contractScope":null,"id":30048,"name":"RoleData","nodeType":"UserDefinedTypeName","referencedDeclaration":30046,"src":"1747:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage_ptr","typeString":"struct AccessControlUpgradeSafe.RoleData"}}},"value":null,"visibility":"private"},{"id":30053,"nodeType":"VariableDeclaration","src":"1778:49:30","nodes":[],"constant":true,"functionSelector":"a217fddf","name":"DEFAULT_ADMIN_ROLE","overrides":null,"scope":30285,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"argumentTypes":null,"hexValue":"30783030","id":30052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1823:4:30","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"id":30061,"nodeType":"EventDefinition","src":"2037:89:30","nodes":[],"anonymous":false,"documentation":"@dev Emitted when `account` is granted `role`.\n     * `sender` is the account that originated the contract call, an admin role\nbearer except when using {_setupRole}.","name":"RoleGranted","parameters":{"id":30060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30055,"indexed":true,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30061,"src":"2055:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2055:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30057,"indexed":true,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30061,"src":"2077:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30056,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":30059,"indexed":true,"name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":30061,"src":"2102:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30058,"name":"address","nodeType":"ElementaryTypeName","src":"2102:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2054:71:30"}},{"id":30069,"nodeType":"EventDefinition","src":"2412:89:30","nodes":[],"anonymous":false,"documentation":"@dev Emitted when `account` is revoked `role`.\n     * `sender` is the account that originated the contract call:\n  - if using `revokeRole`, it is the admin role bearer\n  - if using `renounceRole`, it is the role bearer (i.e. `account`)","name":"RoleRevoked","parameters":{"id":30068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30063,"indexed":true,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30069,"src":"2430:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2430:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30065,"indexed":true,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30069,"src":"2452:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30064,"name":"address","nodeType":"ElementaryTypeName","src":"2452:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":30067,"indexed":true,"name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":30069,"src":"2477:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30066,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2429:71:30"}},{"id":30087,"nodeType":"FunctionDefinition","src":"2588:137:30","nodes":[],"body":{"id":30086,"nodeType":"Block","src":"2663:62:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30083,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30073,"src":"2710:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30078,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"2680:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30080,"indexExpression":{"argumentTypes":null,"id":30079,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30071,"src":"2687:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2680:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":30043,"src":"2680:20:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":30082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":31005,"src":"2680:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$30939_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$30939_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":30084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2680:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":30077,"id":30085,"nodeType":"Return","src":"2673:45:30"}]},"documentation":"@dev Returns `true` if `account` has been granted `role`.","functionSelector":"91d14854","implemented":true,"kind":"function","modifiers":[],"name":"hasRole","overrides":null,"parameters":{"id":30074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30071,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30087,"src":"2605:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2605:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30073,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30087,"src":"2619:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30072,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2604:31:30"},"returnParameters":{"id":30077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30076,"name":"","nodeType":"VariableDeclaration","overrides":null,"scope":30087,"src":"2657:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30075,"name":"bool","nodeType":"ElementaryTypeName","src":"2657:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2656:6:30"},"scope":30285,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":30102,"nodeType":"FunctionDefinition","src":"2893:125:30","nodes":[],"body":{"id":30101,"nodeType":"Block","src":"2965:53:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30094,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"2982:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30096,"indexExpression":{"argumentTypes":null,"id":30095,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30089,"src":"2989:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2982:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":30043,"src":"2982:20:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":30098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":31018,"src":"2982:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$30939_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$30939_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":30099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2982:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":30093,"id":30100,"nodeType":"Return","src":"2975:36:30"}]},"documentation":"@dev Returns the number of accounts that have `role`. Can be used\ntogether with {getRoleMember} to enumerate all bearers of a role.","functionSelector":"ca15c873","implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","overrides":null,"parameters":{"id":30090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30089,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30102,"src":"2921:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2921:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2920:14:30"},"returnParameters":{"id":30093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30092,"name":"","nodeType":"VariableDeclaration","overrides":null,"scope":30102,"src":"2956:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2956:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2955:9:30"},"scope":30285,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":30120,"nodeType":"FunctionDefinition","src":"3603:136:30","nodes":[],"body":{"id":30119,"nodeType":"Block","src":"3685:54:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30116,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30106,"src":"3726:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30111,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"3702:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30113,"indexExpression":{"argumentTypes":null,"id":30112,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30104,"src":"3709:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3702:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":30043,"src":"3702:20:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":30115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":31040,"src":"3702:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$30939_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$30939_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":30117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3702:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":30110,"id":30118,"nodeType":"Return","src":"3695:37:30"}]},"documentation":"@dev Returns one of the accounts that have `role`. `index` must be a\nvalue between 0 and {getRoleMemberCount}, non-inclusive.\n     * Role bearers are not sorted in any particular way, and their ordering may\nchange at any point.\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\nyou perform all queries on the same block. See the following\nhttps://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\nfor more information.","functionSelector":"9010d07c","implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","overrides":null,"parameters":{"id":30107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30104,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30120,"src":"3626:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3626:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30106,"name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":30120,"src":"3640:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3625:29:30"},"returnParameters":{"id":30110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30109,"name":"","nodeType":"VariableDeclaration","overrides":null,"scope":30120,"src":"3676:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30108,"name":"address","nodeType":"ElementaryTypeName","src":"3676:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3675:9:30"},"scope":30285,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":30133,"nodeType":"FunctionDefinition","src":"3920:112:30","nodes":[],"body":{"id":30132,"nodeType":"Block","src":"3986:46:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30127,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"4003:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30129,"indexExpression":{"argumentTypes":null,"id":30128,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30122,"src":"4010:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4003:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":30045,"src":"4003:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":30126,"id":30131,"nodeType":"Return","src":"3996:29:30"}]},"documentation":"@dev Returns the admin role that controls `role`. See {grantRole} and\n{revokeRole}.\n     * To change a role's admin, use {_setRoleAdmin}.","functionSelector":"248a9ca3","implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","overrides":null,"parameters":{"id":30123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30122,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30133,"src":"3942:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3941:14:30"},"returnParameters":{"id":30126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30125,"name":"","nodeType":"VariableDeclaration","overrides":null,"scope":30133,"src":"3977:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3976:9:30"},"scope":30285,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":30158,"nodeType":"FunctionDefinition","src":"4282:223:30","nodes":[],"body":{"id":30157,"nodeType":"Block","src":"4347:158:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30142,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"4373:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30144,"indexExpression":{"argumentTypes":null,"id":30143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30135,"src":"4380:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4373:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":30045,"src":"4373:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30146,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29921,"src":"4397:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":30147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":30141,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30087,"src":"4365:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":30148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4365:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74","id":30149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4412:49:30","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","typeString":"literal_string \"AccessControl: sender must be an admin to grant\""},"value":"AccessControl: sender must be an admin to grant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","typeString":"literal_string \"AccessControl: sender must be an admin to grant\""}],"id":30140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4357:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":30150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4357:105:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30151,"nodeType":"ExpressionStatement","src":"4357:105:30"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30153,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30135,"src":"4484:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":30154,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30137,"src":"4490:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":30152,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30256,"src":"4473:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":30155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30156,"nodeType":"ExpressionStatement","src":"4473:25:30"}]},"documentation":"@dev Grants `role` to `account`.\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\nevent.\n     * Requirements:\n     * - the caller must have ``role``'s admin role.","functionSelector":"2f2ff15d","implemented":true,"kind":"function","modifiers":[],"name":"grantRole","overrides":null,"parameters":{"id":30138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30135,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30158,"src":"4301:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4301:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30137,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30158,"src":"4315:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30136,"name":"address","nodeType":"ElementaryTypeName","src":"4315:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4300:31:30"},"returnParameters":{"id":30139,"nodeType":"ParameterList","parameters":[],"src":"4347:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":30183,"nodeType":"FunctionDefinition","src":"4739:226:30","nodes":[],"body":{"id":30182,"nodeType":"Block","src":"4805:160:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30167,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"4831:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30169,"indexExpression":{"argumentTypes":null,"id":30168,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30160,"src":"4838:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4831:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":30045,"src":"4831:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30171,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29921,"src":"4855:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":30172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4855:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":30166,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30087,"src":"4823:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":30173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65","id":30174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4870:50:30","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","typeString":"literal_string \"AccessControl: sender must be an admin to revoke\""},"value":"AccessControl: sender must be an admin to revoke"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","typeString":"literal_string \"AccessControl: sender must be an admin to revoke\""}],"id":30165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4815:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":30175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4815:106:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30176,"nodeType":"ExpressionStatement","src":"4815:106:30"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30178,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30160,"src":"4944:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":30179,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30162,"src":"4950:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":30177,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30280,"src":"4932:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":30180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4932:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30181,"nodeType":"ExpressionStatement","src":"4932:26:30"}]},"documentation":"@dev Revokes `role` from `account`.\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     * Requirements:\n     * - the caller must have ``role``'s admin role.","functionSelector":"d547741f","implemented":true,"kind":"function","modifiers":[],"name":"revokeRole","overrides":null,"parameters":{"id":30163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30160,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30183,"src":"4759:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4759:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30162,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30183,"src":"4773:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30161,"name":"address","nodeType":"ElementaryTypeName","src":"4773:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4758:31:30"},"returnParameters":{"id":30164,"nodeType":"ParameterList","parameters":[],"src":"4805:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":30204,"nodeType":"FunctionDefinition","src":"5456:205:30","nodes":[],"body":{"id":30203,"nodeType":"Block","src":"5524:137:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":30194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":30191,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30187,"src":"5542:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30192,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29921,"src":"5553:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":30193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5553:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5542:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":30195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5567:49:30","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":30190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5534:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":30196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:83:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30197,"nodeType":"ExpressionStatement","src":"5534:83:30"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30185,"src":"5640:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":30200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30187,"src":"5646:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":30198,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30280,"src":"5628:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":30201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5628:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30202,"nodeType":"ExpressionStatement","src":"5628:26:30"}]},"documentation":"@dev Revokes `role` from the calling account.\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\npurpose is to provide a mechanism for accounts to lose their privileges\nif they are compromised (such as when a trusted device is misplaced).\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\nevent.\n     * Requirements:\n     * - the caller must be `account`.","functionSelector":"36568abe","implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","overrides":null,"parameters":{"id":30188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30185,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30204,"src":"5478:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5478:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30187,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30204,"src":"5492:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30186,"name":"address","nodeType":"ElementaryTypeName","src":"5492:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5477:31:30"},"returnParameters":{"id":30189,"nodeType":"ParameterList","parameters":[],"src":"5524:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":30217,"nodeType":"FunctionDefinition","src":"6226:110:30","nodes":[],"body":{"id":30216,"nodeType":"Block","src":"6294:42:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30206,"src":"6315:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":30213,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30208,"src":"6321:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":30211,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30256,"src":"6304:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":30214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30215,"nodeType":"ExpressionStatement","src":"6304:25:30"}]},"documentation":"@dev Grants `role` to `account`.\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\nevent. Note that unlike {grantRole}, this function doesn't perform any\nchecks on the calling account.\n     * [WARNING]\n====\nThis function should only be called from the constructor when setting\nup the initial roles for the system.\n     * Using this function in any other way is effectively circumventing the admin\nsystem imposed by {AccessControl}.\n====","implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","overrides":null,"parameters":{"id":30209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30206,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30217,"src":"6246:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6246:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30208,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30217,"src":"6260:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30207,"name":"address","nodeType":"ElementaryTypeName","src":"6260:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6245:31:30"},"returnParameters":{"id":30210,"nodeType":"ParameterList","parameters":[],"src":"6294:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":30232,"nodeType":"FunctionDefinition","src":"6413:124:30","nodes":[],"body":{"id":30231,"nodeType":"Block","src":"6486:51:30","nodes":[],"statements":[{"expression":{"argumentTypes":null,"id":30229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30224,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"6496:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30226,"indexExpression":{"argumentTypes":null,"id":30225,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30219,"src":"6503:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6496:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":30045,"src":"6496:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":30228,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30221,"src":"6521:9:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6496:34:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30230,"nodeType":"ExpressionStatement","src":"6496:34:30"}]},"documentation":"@dev Sets `adminRole` as ``role``'s admin role.","implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","overrides":null,"parameters":{"id":30222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30219,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30232,"src":"6436:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6436:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30221,"name":"adminRole","nodeType":"VariableDeclaration","overrides":null,"scope":30232,"src":"6450:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"6435:33:30"},"returnParameters":{"id":30223,"nodeType":"ParameterList","parameters":[],"src":"6486:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":30256,"nodeType":"FunctionDefinition","src":"6543:184:30","nodes":[],"body":{"id":30255,"nodeType":"Block","src":"6602:125:30","nodes":[],"statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30236,"src":"6641:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30239,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"6616:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30241,"indexExpression":{"argumentTypes":null,"id":30240,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30234,"src":"6623:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6616:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":30043,"src":"6616:20:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":30243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":30961,"src":"6616:24:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$30939_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$30939_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":30245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6616:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":30254,"nodeType":"IfStatement","src":"6612:109:30","trueBody":{"id":30253,"nodeType":"Block","src":"6651:70:30","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30247,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30234,"src":"6682:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":30248,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30236,"src":"6688:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29921,"src":"6697:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":30250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6697:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":30246,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30061,"src":"6670:11:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":30251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6670:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30252,"nodeType":"EmitStatement","src":"6665:45:30"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","overrides":null,"parameters":{"id":30237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30234,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30256,"src":"6563:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6563:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30236,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30256,"src":"6577:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30235,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6562:31:30"},"returnParameters":{"id":30238,"nodeType":"ParameterList","parameters":[],"src":"6602:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":30280,"nodeType":"FunctionDefinition","src":"6733:188:30","nodes":[],"body":{"id":30279,"nodeType":"Block","src":"6793:128:30","nodes":[],"statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30260,"src":"6835:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":30263,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30050,"src":"6807:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$30046_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData storage ref)"}},"id":30265,"indexExpression":{"argumentTypes":null,"id":30264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30258,"src":"6814:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6807:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$30046_storage","typeString":"struct AccessControlUpgradeSafe.RoleData storage ref"}},"id":30266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":30043,"src":"6807:20:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$30939_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":30267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":30983,"src":"6807:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$30939_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$30939_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":30269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6807:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":30278,"nodeType":"IfStatement","src":"6803:112:30","trueBody":{"id":30277,"nodeType":"Block","src":"6845:70:30","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":30271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30258,"src":"6876:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":30272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30260,"src":"6882:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":30273,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29921,"src":"6891:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":30274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6891:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":30270,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30069,"src":"6864:11:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":30275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6864:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30276,"nodeType":"EmitStatement","src":"6859:45:30"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","overrides":null,"parameters":{"id":30261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30258,"name":"role","nodeType":"VariableDeclaration","overrides":null,"scope":30280,"src":"6754:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6754:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":30260,"name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":30280,"src":"6768:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30259,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6753:31:30"},"returnParameters":{"id":30262,"nodeType":"ParameterList","parameters":[],"src":"6793:0:30"},"scope":30285,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":30284,"nodeType":"VariableDeclaration","src":"6927:25:30","nodes":[],"constant":false,"name":"__gap","overrides":null,"scope":30285,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":30281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":30283,"length":{"argumentTypes":null,"hexValue":"3439","id":30282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6935:2:30","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"6927:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"value":null,"visibility":"private"}],"abstract":true,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":30014,"name":"Initializable","nodeType":"UserDefinedTypeName","referencedDeclaration":30007,"src":"1281:13:30","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$30007","typeString":"contract Initializable"}},"id":30015,"nodeType":"InheritanceSpecifier","src":"1281:13:30"},{"arguments":null,"baseName":{"contractScope":null,"id":30016,"name":"ContextUpgradeSafe","nodeType":"UserDefinedTypeName","referencedDeclaration":29937,"src":"1296:18:30","typeDescriptions":{"typeIdentifier":"t_contract$_ContextUpgradeSafe_$29937","typeString":"contract ContextUpgradeSafe"}},"id":30017,"nodeType":"InheritanceSpecifier","src":"1296:18:30"}],"contractDependencies":[29937,30007],"contractKind":"contract","documentation":"@dev Contract module that allows children to implement role-based access\ncontrol mechanisms.\n * Roles are referred to by their `bytes32` identifier. These should be exposed\nin the external API and be unique. The best way to achieve this is by\nusing `public constant` hash digests:\n * ```\nbytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n```\n * Roles can be used to represent a set of permissions. To restrict access to a\nfunction call, use {hasRole}:\n * ```\nfunction foo() public {\n    require(hasRole(MY_ROLE, _msgSender()));\n    ...\n}\n```\n * Roles can be granted and revoked dynamically via the {grantRole} and\n{revokeRole} functions. Each role has an associated admin role, and only\naccounts that have a role's admin role can call {grantRole} and {revokeRole}.\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\nthat only accounts with this role will be able to grant or revoke other\nroles. More complex role relationships can be created by using\n{_setRoleAdmin}.","fullyImplemented":true,"linearizedBaseContracts":[30285,29937,30007],"name":"AccessControlUpgradeSafe","scope":30286}]},"id":30}